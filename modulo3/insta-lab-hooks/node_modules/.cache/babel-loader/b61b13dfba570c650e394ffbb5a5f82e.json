{"ast":null,"code":"import React from 'react';\nimport { useState } from \"react\";\nexport default function Curtidas() {\n  //     const [curtido, setCurtido] = useState(\"false\");\n  //     const [numeroCurtidas, setNumeroCurtidas] = useState(0);\n  //     // Função que atualiza like/dislike, adicionando 1 ou removendo 1 like.\n  //   onClickCurtida = () => {\n  //     // verifica se a propriedade booleana curtido presente no estado é true ou false\n  //     if (curtido) {\n  //       // se true, o estado atualiza curtido para o seu inverso e remove 1 like.\n  //       ({ curtido: !curtido, numeroCurtidas: numeroCurtidas - 1 });\n  //     } else {\n  //       // se false, o estado atualiza curtido para o seu inverso e adiciona 1 like.\n  //       ({ curtido: !curtido, numeroCurtidas: numeroCurtidas + 1 });\n  //     };\n  //   };\n  return oi // <div>\n  //      <section>\n  //         <span>Número de curtidas: {numeroCurtidas}</span>\n  //         {/* Início de comentário multi-linhas\n  //           Neste button foi implementando um ternário que verifica o \n  //           número de curtidas. Se a propriedade 'numeroCurtidas' \n  //           for 1 (tiver um like), exibimos no botão a descrição \"Dislike\".\n  //           Caso contrário ('numeroCurtidas' for 0), exibimos a descrição \"Like\".\n  //         Fim de comentário multi-linhas */}\n  //         <button onClick={onClickCurtida}>\n  //           {numeroCurtidas === 0 ? \"Like\" : \"Dislike\"}\n  //         </button>\n  //       </section>\n  // </div>\n  ;\n}\n_c = Curtidas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Curtidas\");","map":{"version":3,"names":["React","useState","Curtidas","oi"],"sources":["C:/Users/itautec/Desktop/alves-Lais-Martins/modulo3/insta-lab-hooks/src/components/Curtidas.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from \"react\"\r\n\r\nexport default function Curtidas() {\r\n//     const [curtido, setCurtido] = useState(\"false\");\r\n//     const [numeroCurtidas, setNumeroCurtidas] = useState(0);\r\n    \r\n//     // Função que atualiza like/dislike, adicionando 1 ou removendo 1 like.\r\n//   onClickCurtida = () => {\r\n//     // verifica se a propriedade booleana curtido presente no estado é true ou false\r\n//     if (curtido) {\r\n//       // se true, o estado atualiza curtido para o seu inverso e remove 1 like.\r\n//       ({ curtido: !curtido, numeroCurtidas: numeroCurtidas - 1 });\r\n//     } else {\r\n//       // se false, o estado atualiza curtido para o seu inverso e adiciona 1 like.\r\n//       ({ curtido: !curtido, numeroCurtidas: numeroCurtidas + 1 });\r\n//     };\r\n//   };\r\n    \r\n  return ( oi\r\n    // <div>\r\n    //      <section>\r\n    //         <span>Número de curtidas: {numeroCurtidas}</span>\r\n    //         {/* Início de comentário multi-linhas\r\n            \r\n    //           Neste button foi implementando um ternário que verifica o \r\n    //           número de curtidas. Se a propriedade 'numeroCurtidas' \r\n    //           for 1 (tiver um like), exibimos no botão a descrição \"Dislike\".\r\n    //           Caso contrário ('numeroCurtidas' for 0), exibimos a descrição \"Like\".\r\n\r\n    //         Fim de comentário multi-linhas */}\r\n    //         <button onClick={onClickCurtida}>\r\n    //           {numeroCurtidas === 0 ? \"Like\" : \"Dislike\"}\r\n    //         </button>\r\n    //       </section>\r\n          \r\n           \r\n\r\n    // </div>\r\n  )\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,QAAT,GAAoB;EACnC;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEE,OAASC,EAAT,CACE;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAIA;EAnBF;AAqBD;KArCuBD,Q"},"metadata":{},"sourceType":"module"}